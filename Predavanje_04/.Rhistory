#Lahko narišemo škatle z brki različnih geoloških tipov po višinah
ncdata <- read_RAST(c("geology_30m", "elevation"), cat=c(TRUE, FALSE))
da <- data.frame(elevation = ncdata$elevation, geology_30m = ncdata$geology_30m)
library(ggplot2)
g1 <- ggplot(da, aes(x = geology_30m, y= elevation)) + geom_boxplot()
ggsave(g1, '/home/jana/git/R-za-neprogramerje/Predavanje_08/box.pdf')
g1
ggsave(g1, '/home/jana/git/R-za-neprogramerje/Predavanje_08/box.pdf')
ggsave('/home/jana/git/R-za-neprogramerje/Predavanje_08/box.pdf', g1,width = 250, height = 200,res=100 )
ggsave('/home/jana/git/R-za-neprogramerje/Predavanje_08/box.pdf', g1,width = 8, height = 6,res=100 )
ggsave('/home/jana/git/R-za-neprogramerje/Predavanje_08/box.pdf', g1,width = 8, height = 6, dpi=100)
ggsave('/home/jana/git/R-za-neprogramerje/Predavanje_08/box.pdf', g1,width = 1'', height = 6, dpi=100)
ggsave('/home/jana/git/R-za-neprogramerje/Predavanje_08/box.pdf', g1,width = 10, height = 6, dpi=100)
5*0.3 + 3*0.4 +0.2
shiny::runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_domaca')
runApp('shiny_domaca')
runApp('shiny_primer')
titlePanel("Moja prva shiny aplikacija")
runexample("01_hello")
runExample("01_hello")
faithful$waiting
faithful
runExample("01_hello")
runExample("02_text")
runExample("03_reactivity")
runExample("04_mpg")
runExample("05_sliders")
runExample("06_tabsets")
runExample("06_tabsets")
runExample("07_widgets")
runExample("08_html")
runExample("09_upload")
runExample("10_download")
runExample("11_timer")
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
runApp('shiny_primer')
80*31
80 + 80 + 30 +65
80 + 80 + 30 +65 + 40
(80 + 80 + 30 +65 + 40) *31
20.50+39+51.17+115.73+33.50+24+41+110+13+10.50+152.60+25+39+67.80+55+3.20+40.71+41.40+20
163/274
54/94
53/94
50/94
48/94
79/162
64/140
65/140
readRDS('/home/jana/praksa/elyn/dataset/Ljubljana_meteo.rds')
po <-readRDS('/home/jana/praksa/elyn/dataset/Ljubljana_meteo.rds')
colnames(po)
read.csv('/home/jana/git/air-quality-during-lockdown/Prediction/NO2/Celje/ci_NO2.csv')
po<-read.csv('/home/jana/git/air-quality-during-lockdown/Prediction/NO2/Celje/ci_NO2.csv')
colnames(po)
po<-read.csv('/home/jana/git/air-quality-during-lockdown/Prediction/NO2/Celje/pred_19_Gauss.csv')
po<-read.csv('/home/jana/git/air-quality-during-lockdown/Prediction/NO2/Celje/pred_19_Gaussian.csv')
po<-read.csv('/home/jana/git/air-quality-during-lockdown/Prediction/NO2/Celje/pred19_Gaussian.csv')
po<-read.csv('/home/jana/git/air-quality-during-lockdown/Prediction/NO2/Celje/pred19_Gaussian_NO2.csv')
po
names(po)
po$value -p$pred
po$value -po$pred
plot(po$value -p$pred)ž
plot(po$value -p$pred)
plot(po$value -po$pred)
po<-read.csv('/home/jana/git/air-quality-during-lockdown/Prediction/NO2/Celje/pred_Gaussian_NO2.csv')
plot(po$value -po$pred)
install.packages("raster")
install.packages("rmarkdown")
install.packages("jquerylib")
install.packages("htmltools")
install.packages("fastmap")
install.packages("htmltools")
install.packages("jquerylib")
install.packages("sass")
install.packages("bslib")
install.packages("jsonlite")
install.packages("bslib")
install.packages("cachem")
install.packages("bslib")
install.packages("rmarkdown")
install.packages("evaluate")
install.packages("rmarkdown")
install.packages("knitr")
install.packages("highr")
install.packages("knitr")
install.packages("rmarkdown")
install.packages("yaml")
install.packages("rmarkdown")
install.packages("rmarkdown")
1 + 1
3 + 20
matej
1 + 1
halo
zivjo
zivjo
ena
2
4.5
4,5
4.500,00
4500.50
2 + 3
2+3
2 + 3
2  +3
4.5 - 2.7
25/5
2 * 4
5 / 3 + 2
5 / (3 + 2)
4500.50 + 3 * 5
3^2
3^4
sqrt(9)
log(10)
log2(10)
log10(10)
log10(10)
sin(1)
cos(0)
log2(2^10)
(sqrt(sin(5) + cos(4)) + 10)^2
sin(5) + cos(4)
pi
pi^2
sin(pi)
cos(pi)
cos(Pi)
pi
Pi
PI
pI
x <- 5
x
q = 4
q
e <- 6
sin(pi)
x
y <- 2
z <- (x + y)^2
z
log(z)
micka <- 77
micka
ls()
rm(micka)
ls()
micka
x
x^2
x
x <- x^2
z
y
y <- y + 1
y
y <- y + 1
y
y <- y + 1
y
x
y
save.image(file = 'spremenjivke.RData')
ls()
rm(list = ls(all = T))
ls()
load(file = 'spremenljivke.RData')
load(file = 'spremenjivke.RData')
ls()
c(1, 2, 3)
c(x, y, z)
c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
rep(1, 10)
?rep
?rep()
?rep
rep(3, times=3)
rep(3, times = 3)
rep(times = 3, 3)
rep(times = 3, 5)
rep(e, 20)
x1 <- c(2, 4, -6, 3)
x1
x1[2]
x1[0]
x1[1]
x1[2]
x1[3]
x1[4]
1 : 3
3 : 7
x1[1:3]
x1
x1[3]
x1[3] <- 6
x1
length(x1)
x1[length(x1)]
x1[length(x1) - 1]
x1[length(x1) - 2]
sum(x1)
x1
mean(x1)
min(x1)
max(x1)
median(x1)
sd(x1)
x <- c(1, 2, 2, 5)
x^2
x + 5
x + 3
x - 3
-x
x1
x
x + x1
x * x1
c(1, 2, 3)
c(x, 1)
c(1, 2, 4, 6, 3, 6, 2, 6)
x2 <- c(1, 2, 4, 6, 3, 6, 2, 6)
x2 == 6
x1 = 3
x1 <- 3
x1 == 3
x1 == 2
x2[x2 == 6]
x2[x2 == 6] <- -4
x2
x2
x2[5]
x2[5] <- 10
x2
x1
x1 <- c(1, 2, 3, 5, 6)
x[1:2]
x[3:length(x)]
x[4:length(x)]
c(x[1:3], 4, x(4, length(x)))
c(x1[1:3], 4, x1[4: length(x1)])
x1
x1 <- c(x1[1:3], 4, x1[4: length(x1)])
x1
x1 <- c(1, 2, 3, 5, 6)
x1 <- append(x1, 4, after = 3)
x1
x1 <- append(x1, c(4, 8, 9), after = 3)
x1
cena <- c(153, 4.5, 12, 53.5, 8.7)
DDV <- c(22, 9.5, 22, 22, 9.5)
sum(cena)
DDV_d <- DD/100
DDV_d <- DDV/100
DDV_d
DDV_d * cena
(DDV_d * cena) + cena
sum((DDV_d * cena) + cena)
install.packages("openxlsx")
install.packages("zip")
install.packages("openxlsx")
setwd('/home/jana/delavnice/R-za_neprogramerje/Predavanje_03/')
setwd('/home/jana/delavnice/R-za-neprogramerje/Predavanje_03/')
vek <- c(4, 2, 3, 6, 7, 1)
vek
vek[2]
2:5
vek[2:5]
vek[c(2, 4, 6)]
vek[c(1, 5, 10)]
seq(2, 6)
2:6
seq(2, 6, by = 2)
vek[seq(2, 4, by = 2)]
vek[seq(2, 6, by = 2)]
vek[seq(6, 2, by = -2)]
T
F
length(vek)
vek[lv]
lv <- c(F, T, F, T, F, T)
vek[lv]
vek > 3
vek[vek > 3]
vek
vek < 6
vek == 7
vek = 7
vek
vek <- c(4, 2, 3, 6, 7, 1)
vek < 5
vek == 7
vek >= 4
vek <= 5
vek < 3 & vek > 5
vek < 3 | vek > 5
vek > 3 & vek < 5
vek != 2
vek
vek[vek< 3 | vek > 5]
a <- c(1, 3, NA, 5, NA, 4)
is.na(a)
a[is.na(a)]
?mean
a[is.na(a)] <- mean(a, na.rm = T)
a
a <- c(1, 3, NA, 5, NA, 4)
is.na(a)
a[is.na(a)]
a[is.na(a)] <- 1000
a
vek > 6
vek >= 6
which(vek >= 6)
################################data.frame
visina <- c(179, 185, 183, 172, 174, 185, 193, 169, 173, 168)
teza <- c(75, 89, 70, 80, 58, 86, 73, 63, 72, 70)
spol <- c("f", "m", "m", "m", "f", "m", "f", "f", "m", "f")
df <- data.frame(spol, visina, teza)
df
spol <- c("f", "m", "m", "m", "f", "m", "f", "f")
df <- data.frame(spol, visina, teza)
################################data.frame
visina <- c(179, 185, 183, 172, 174, 185, 193, 169, 173, 168)
teza <- c(75, 89, 70, 80, 58, 86, 73, 63, 72, 70)
spol <- c("f", "m", "m", "m", "f", "m", "f", "f", "f", "m")
length(visina)
length(teza)
length(spol)
df <- data.frame(spol, visina, teza)
dat <- read.table("./data_raw/president_county_candidate.csv")
dat <- read.table("./data_raw/president_county_candidate.csv",
header = T,
sep = ",",
quote = "")
dat
head(dat)
head(dat, 20)
head(dat, 20)
tail(dat)
tail(dat, 15)
dim(dat)
nrow(dat)
ncol(dat)
names(dat)
summary(dat)
df
df[3, ]
df[ , 2]
df[ , 1:2]
df[ , c(1, 3)]
df[c(2, 4, 6), c(1, 3)]
names(df)
df[ , "spol"]
df[ , c("visina", "spol")]
df$visina
df[ , df$visina > 180]
df[df$visina > 180, ]
df[df$visina > 175 & df$spol == "f", ]
df[df$visina > 175 & df$spol == "f", "teza"]
df[df$visina > 175 & df$spol == "f", ]
df[df$visina > 175 & df$spol == "f", ]$teza
df[df$visna > 180]
df[df$visna > 180]
df
df[df$visna > 180]
df[df$visina > 180]
df[ , -2]
df[-3, ]
df[-(3:6), ]
df[-(3:6), -(1:2)]
df[-c(2, 4, 6, 8, 10), -1]
df[ , -c("spol", "teza")]
dim(df)
imena <- c("Micka", "Marko", "Gregor", "Tomaz", "Ana", "Peter",
"Mojca", "Katja", "Anze", "Alja")
length(imena)
df$imena <- imena
df
df$imena <- imena
df
vrstica <- data.frame(spol = "m", visina = 170, teza = 60, imena = "Samo")
vrstica
df[11, ] <- vrstica
df
df[nrow(df), ]
df[nrow(df) + 1, ] <- vrstica
df
df[-nrow(df), ]
df
df[2:5, c(1,3)]
df
df <- df[-nrow(df), ]
df
df[ , -c("spol", "teza")]
names(df)
names(df) == "teza"
which(names(df) == "teza")
ind <- which(names(df) == "teza")
df[ , -ind]
df
df[ , c(4, 1, 2, 3)]
cbind(imena, df)
cbind(df, imena)
visina <- c(179, 185, 183, 172, 174, 185, 193, 169, 173, 168)
teza <- c(75, 89, 70, 80, 58, 86, 73, 63, 72, 70)
spol <- c("f", "m", "m", "m", "f", "m", "f", "f", "f", "m")
length(visina)
df
imena
length(imena)
cbind(imena, df)
df
df <- data.frame(spol, visina, teza)
df
cbind(imena, df)
cbind(df, imena)
cbind(df, imena, .before = 2)
df
df$imena <- imena
df
df[, c(4, 1, 2, 3)]
load('/home/jana/ecmwf_podatki/EC12_14014_arh.Rdat')
aa
load('/home/jana/ecmwf_podatki/EC12_14014_arh.Rdat')
load('/home/jana/ecmwf_podatki/EC12_14014_arh.Rdat')
moddata
summary(moddata)
df
visina <- c(179, 185, 183, 172, 174, 185, 193, 169, 173, 168)
teza <- c(75, 89, 70, 80, 58, 86, 73, 63, 72, 70)
spol <- c("f", "m", "m", "m", "f", "m", "f", "f", "m", "f")
df <- data.frame(spol, visina, teza)
df$teza / (df$visina/100)^2
df$visina + df$spol
df[1, ] +df[2, ]
df$visina + 5
log(df$teza)
setwd('/home/jana/delavnice/R-za-neprogramerje/Predavanje_04/')
dat <- read.table('./data_raw/delci2.csv',
header = TRUE,
dec = ".",
sep = ",",
quote = "\"")
head(dat)
summary(dat)
unique(vek$kraj)
unique(dat$kraj)
as.Date("2020-02-01")
datPM10 <- dat[dat$kraj == 'Celje' & dat$PM10 > 30, ]
datPM10$PM10err <-
datPM10$PM10 * 0.22
head(datPM10)
summary(datPM10)
datPM10$PM10corr <- datPM10$PM10 + datPM10$PM10err
datPM10$NaCl <- datPM10$Na + datPM10$Cl
as.Date(datPM10$Datum)
as.Date(datPM10$Datum, format = "%m/%d/%Y")
datPM10$Datum <- as.Date(datPM10$Datum, format = "%m/%d/%Y")
library(lubridate)
day(datPM10$Datum)
month(datPM10$Datum)
year(datPM10$Datum)
yday(datPM10$Datum)
weekdays(datPM10$Datum)
datPM10[month(datPM10$Datum) == 11, ]
df
table(df$spol)
datPM10$Datum
year(datPM10$Datum)
table(year(datPM10$Datum))
dat
